# AutoMERNate Docker Compose Configuration
# Author: Muhammad Bilal Raza Attari
# Version: 1.0

version: '3.8'

services:
  # MongoDB Database Service - COMMENTED OUT (Using MongoDB Atlas instead)
  # Uncomment if you want to use local MongoDB instead of Atlas
  # mongodb:
  #   image: mongo:7.0
  #   container_name: automernate-mongodb
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
  #     MONGO_INITDB_DATABASE: automernate
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #     - mongodb_config:/data/configdb
  #   networks:
  #     - automernate-network
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/automernate --quiet
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 40s

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: automernate-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      MONGO_URI: ${MONGO_URI}
      JWT_SECRET: ${JWT_SECRET:-change_this_secret_in_production}
      PAGINATION_LIMIT: ${PAGINATION_LIMIT:-8}
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: ${EMAIL_FROM:-<noreply@automernate.com>}
    volumes:
      - ./uploads:/app/uploads
    networks:
      - automernate-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Frontend React Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: automernate-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:5000
    depends_on:
      - backend
    networks:
      - automernate-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

# Volumes for persistent data
volumes:
  mongodb_data:
    driver: local
    name: automernate_mongodb_data
  mongodb_config:
    driver: local
    name: automernate_mongodb_config

# Custom network
networks:
  automernate-network:
    driver: bridge
    name: automernate_network
